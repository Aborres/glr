import os
import shutil

# Tell SCons to create our build files in the 'build' directory
VariantDir('build', 'src', duplicate=0)

# Set our source files
source_files = Glob('*.cpp', '*.h')

env = Environment(ENV = os.environ, CCFLAGS=[]) 


# Set our required libraries
libraries = [
'glr',
'GL',
'GLEW',
'liblibberkelium_d',
'Xi',
'sfml-window',
'assimp',
'freeimage',
'Angelscript',
'boost_log', 
'boost_date_time', 
'boost_thread',
'boost_wave',
'boost_regex'
]

library_paths = [  
'../../build',
]

# Set our g++ compiler flags
cpp_flags = [
'-std=c++11',
'-Wall',
'-I"../../src"',
]

cpp_defines = []

cpp_flags.append('-g')
cpp_defines.append('DEBUG')	
       

env.Append( CPPFLAGS = cpp_flags )
env.Append( CPPDEFINES = cpp_defines )

env.SetOption('num_jobs', 4)

# Tell SCons the program to build
env.Program('build/simple', source_files, LIBS = libraries, LIBPATH = library_paths)

# do some stuff for berkelium
if (not os.path.exists('build')):
	os.makedirs('build')

if (not os.path.exists('./build/berkelium')):
	shutil.copyfile('../../../../berkelium/berkelium', './build/berkelium')
	os.chmod('./build/berkelium', 0755)

if (not os.path.exists('./build/chrome.pak')):
	shutil.copyfile('../../../../berkelium/build/chromium/src/out/Release/chrome.pak', 'build/chrome.pak')
	os.chmod('build/chrome.pak', 0755)

if (not os.path.exists('./build/locales')):
	shutil.copytree('../../../../berkelium/build/chromium/src/out/Release/locales', 'build/locales')
	os.chmod('build/locales', 0755)
